apply plugin: 'com.android.application'

/**
 * Gets the current date.
 *      Format: yyyy-mm-dd
 *
 * @return  The current date.
 */
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}

android {
    signingConfigs {
        config {
            keyAlias 'intencity'
            keyPassword 'kill23456'
            storeFile file('/Users/nickpiscopio/Documents/keystore/intencity_keystore')
            storePassword 'kill23456'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.intencity.intencity"
        minSdkVersion 19
        targetSdkVersion 25
        // Intencity's version for Google Play.
        versionCode 75
        versionName "2.8.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Creates a custom name for the apk.
            android.applicationVariants.all { variant ->

                // We only name the file like this if we are releasing it.
                // This is because if we use this name, we cannot debug properly.
                // It will just use the old apk or not find one at all.
                variant.outputs.each { output ->
                    /*
                     * Gets the version name from the latest Git tag
                     */
                    def gitVersion = { ->
                        def stdout = new ByteArrayOutputStream()
                        exec {
                            commandLine 'git', 'rev-parse', '--short', 'HEAD'
                            standardOutput = stdout
                        }
                        return stdout.toString().trim()
                    }

                    def finalName = "intencity_" + variant.versionName + "_" + gitVersion() + "_" + getDate() + ".apk"
                    output.outputFile = new File(output.outputFile.parent, finalName)
                }
            }
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    // We use this for the location services by google for the fitness locations.
    compile 'com.google.android.gms:play-services-location:10.2.6'
    compile 'com.google.android.gms:play-services-maps:10.2.6'
    compile 'com.google.android.gms:play-services-places:10.2.6'
    // This is for google sign-in.
    compile 'com.google.android.gms:play-services-auth:10.2.6'
    //    compile 'com.google.android.gms:play-services:10.2.6'
    // Pull to refresh.
    compile 'com.android.support:support-v4:25.1.0'
    // Lazy loading of images.
    // Documentation: https://github.com/nostra13/Android-Universal-Image-Loader
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
}

// This is to enable Google sign-in.
apply plugin: 'com.google.gms.google-services'